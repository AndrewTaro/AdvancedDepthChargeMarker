#depth_charge_marker.unbound
(def element WorldDepthChargeMarker (_markerEntity:gfx) layout=true
	(scope
		(event evMarkerShow)

		(macro GET_MARKER_ENTITY_COMPONENT 'depthCharge')
		#mod
		(macro GET_MARKER_ENTITY_COMPONENT 'distance')
		#

		(var dangerLevel:number = "depthChargeComponent.dangerLevel" (event "depthChargeComponent.evDangerLevelChanged"))
		(var dangerPostfix:str = "dangerLevel == SC.Battle.DANGER_LEVEL.CRITICAL ? '_danger' : ''")

		#mod
		(var cameraEntity:gfx = "$datahub.getSingleEntity(CC.camera)")
		(var altVisionEnabled:bool = "cameraEntity.camera.altVision" (event "cameraEntity.camera.evAltVisionChanged"))

		(var distanceToShip:number = "distanceComponent.distanceToShip * 1000" (event "evEnterFrame"))
		(var distanceText:str = "formatFloatingPoint(distanceToShip, 1) + ' ' + tr('IDS_METER')")
		(var distanceItemVisibility:bool = "distanceToShip < 5000")
		#

		(var markerIcon:str = "'icon_depth_charge' + dangerPostfix")
	)

	(dispatch evMarkerShow args="{}" on='addedToStage')

	(controller $Animation
		(bindcall play	duration="0.15"
						from="{alpha: 0}"
						to="{alpha: 1}"
						action="kill"
						(event "evMarkerShow")
		)
		(bindcall play	duration=0.15
						from="{alpha: 1}"
						to="{alpha: 0}"
						action="kill"
						(event "depthChargeComponent.evBlowUp")
		)
	)

	(style
		(width = 0) (height = 0)
		(align = "center|middle")
	)
	#modded
	(element SimpleMarkerTextItem "distanceText"
		(bind visible "distanceItemVisibility || altVisionEnabled")
	)
	#
	(block
		#(bind visible "dangerLevel != SC.Battle.DANGER_LEVEL.NORMAL")
		(style
			(bind backgroundImage "'url:../battle_hud/markers/depth_charges/' + markerIcon + '.png'")
			(backgroundSize = "autosize")
		)
	)
)